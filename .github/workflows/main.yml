name: Check API and Notify on Change

on:
  schedule:
    - cron: "*/1 * * * *"  # Every minute
  workflow_dispatch:        # Manual trigger

permissions:
  contents: write  # needed to push updated hash file

jobs:
  check-endpoint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: Check API Response and Compute Hash
        id: check
        run: |
          RESPONSE=$(curl -s -k "${{ secrets.EMAIL_USERNAME }}")
          NORMALIZED=${RESPONSE:-null}
          HASH=$(echo "$NORMALIZED" | sha256sum | awk '{print $1}')
          LENGTH=$(echo "$NORMALIZED" | jq 'length' 2>/dev/null || echo 0)

          echo "Hash: $HASH"
          echo "Length: $LENGTH"
          echo "Response: $RESPONSE"

          echo "hash=$HASH" >> $GITHUB_OUTPUT
          echo "response=$RESPONSE" >> $GITHUB_OUTPUT
          echo "length=$LENGTH" >> $GITHUB_OUTPUT

      - name: Compare with previous hash
        id: compare
        run: |
          HASH_FILE="last_hash.txt"
          PREV_HASH=""
          [ -f "$HASH_FILE" ] && PREV_HASH=$(cat "$HASH_FILE")
          echo "Previous hash: $PREV_HASH"
          echo "Current hash: ${{ steps.check.outputs.hash }}"
          if [ "$PREV_HASH" != "${{ steps.check.outputs.hash }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Send email if response changed
        if: steps.compare.outputs.changed == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: "GitHub Action <${{ secrets.EMAIL_USERNAME }}>"
          to: ${{ secrets.EMAIL_USERNAME }}
          subject: "⚠️ API Response Changed"
          body: |
            The API response has changed.

            ➤ Array length: ${{ steps.check.outputs.length }}
            ➤ New hash: ${{ steps.check.outputs.hash }}

            Full response:
            ${{ steps.check.outputs.response }}

      - name: Update stored hash
        if: steps.compare.outputs.changed == 'true'
        run: |
          echo "${{ steps.check.outputs.hash }}" > last_hash.txt
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add last_hash.txt
          git diff --cached --quiet || git commit -m "Update hash"
          git push
